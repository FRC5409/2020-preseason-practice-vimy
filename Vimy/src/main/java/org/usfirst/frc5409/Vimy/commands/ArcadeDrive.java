// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5409.Vimy.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5409.Vimy.Robot;

/**
 *  This command allows you to choose what the acceleration, deceleration, and turning axis are on your joystick.
 */
public class ArcadeDrive extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    
    // Axis Variables used in the manualDrive function
    public double driverRTrigger;
    public double driverLTrigger;
    public double driverLXAxis;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ArcadeDrive() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        // Constantly setting the values of the controller axis' to their respective variable
        driverRTrigger = Robot.oi.getControllerRawAxis(Robot.oi.driveStick, 3);
        driverLTrigger = Robot.oi.getControllerRawAxis(Robot.oi.driveStick, 2);
        driverLXAxis = Robot.oi.getControllerRawAxis(Robot.oi.driveStick, 0);
        // Setting the axis variables into the respective parameters of the manualDrive function
        Robot.driveTrain.manualDrive(driverRTrigger, driverLTrigger, driverLXAxis);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        // When end() is run, stop the robot
        Robot.driveTrain.manualDrive(0, 0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        // When interrupted, end this command/program
        end();
    }
}
